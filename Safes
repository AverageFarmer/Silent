

local Players = game.Players
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local TriggerDebounce = 0
local TriggerBot = false

local function toMS(s)
	return string.format("%02im:%02is", s/60%60, s%60)
end

local IDs = {
	["94158016"] = true,
	["180028302"] = true,
	["125467851"] = true,
	["1563717192"] = true,
	["4617700"] = true,
	["733113229"] = true,
}

function CanRun()
	for UserId, _ in pairs(IDs) do
		if Players.LocalPlayer.UserId == tonumber(UserId) then
			return true
		end
	end

	return false
end
wait(1)
print(CanRun())
if not CanRun() then return end
print("Loaded")
local Http = game:GetService("HttpService")
local UIS = game:GetService("UserInputService")

local PickUpRemote = game:GetService("ReplicatedStorage")["Events"]["PIC_PU"]

local ScarpSpawn = game:GetService("Workspace")["Filter"]["SpawnedPiles"]
local Dealers = game:GetService("Workspace")["Map"]["Shopz"]
local Safes = game:GetService("Workspace")["Map"]["BredMakurz"]
local Camera = workspace.Camera

local ScrapEvent
local TriggerBot = false
local ScrapHolder = {}
local SafeHolder = {}
local DealerHolder = {}
local espColor = Color3.fromRGB(18, 14, 236)
local SafeOnColor = Color3.fromRGB(34, 226, 16)
local SafeOffColor = Color3.fromRGB(93, 93, 93)
local Toggle = false
local CanPickUp = false

local ScrapProperties = {
	["Radius"] = 10,
	['Color'] = espColor,
	['Visible'] = true,
	["Filled"] = false,
	["Thickness"] = 1
}

local MakeEsp = function(Ador, Shape, Properties)
	if not Ador.PrimaryPart then return end
	local vector, OnScreen = Camera:WorldToScreenPoint(Ador.PrimaryPart.Position)
	local Tag = Http:GenerateGUID(false)

	local Rec = Drawing.new(Shape)

	for Property, Value in pairs(Properties) do
		Rec[Property] = Value
	end

	local Size

	if Shape == "Rectangle" then
		Size = Rec.Size
	else
		Size = Rec.Radius
	end

	local Position = (typeof(Size) == "Vector2" and Vector2.new(vector.X - Size.X/2, vector.Y - Size.Y/2)) or Vector2.new(vector.X - Size/2, vector.Y - Size/2)

	ScrapHolder[Tag] = {Ador, Rec}
	Rec.Position = Position
	Rec.Visible = OnScreen
end

local MakeEsp2 = function(Ador, Shape, Properties)
	if not Ador.PrimaryPart then return end
	local vector, OnScreen = Camera:WorldToScreenPoint(Ador.PrimaryPart.Position)
	local Tag = Http:GenerateGUID(false)

	local Rec = Drawing.new(Shape)

	for Property, Value in pairs(Properties) do
		Rec[Property] = Value
	end

	local Size

	if Shape == "Rectangle" then
		Size = Rec.Size
	else
		Size = Rec.Radius
	end

	local Position = (typeof(Size) == "Vector2" and Vector2.new(vector.X - Size.X/2, vector.Y - Size.Y/2)) or Vector2.new(vector.X - Size/2, vector.Y - Size/2)

	Rec.Position = Position
	Rec.Visible = OnScreen

	return Ador, Rec
end

ScarpSpawn.ChildRemoved:Connect(function(Child)
	for i, v in pairs(ScrapHolder) do
		if Child == v[1] then
			v[2]:Remove()
		end
	end
end)

ScarpSpawn.ChildAdded:Connect(function(Child)
	refresh()
end)

local On = function()
	if Toggle then
		for i,v in pairs(ScarpSpawn:GetChildren()) do
			MakeEsp(v, "Circle", ScrapProperties)
		end
	else
		for i,v in pairs(ScrapHolder) do
			v[2]:Remove()
			ScrapHolder[i] = nil
		end
	end
end

function refresh()
	if Toggle then
		for i,v in pairs(ScrapHolder) do
			v[2]:Remove()
			ScrapHolder[i] = nil
		end
		wait(.1)

		for i,v in pairs(ScarpSpawn:GetChildren()) do
			MakeEsp(v, "Circle", ScrapProperties)
		end
	end
	
	for i,v in pairs(SafeHolder) do
		SafeHolder[i][2]:Remove()
		SafeHolder[i] = nil
	end
	
	wait(.1)
	MakeSafeDots()
end

function MakeSafeDots()
	for i,v in pairs(Safes:GetChildren()) do
		if not v:FindFirstChild("Values") and v:FindFirstChild("Values"):FindFirstChild("Health") then continue end

		local Health = v.Values.Health
		local Model, Rec = MakeEsp2(v, "Circle", {
			Radius = 3,
			Filled = true
		})

		SafeHolder[Http:GenerateGUID(false)] = {Model, Rec}

		if Health.Value <= 0 then 
			Rec.Color = SafeOffColor
		else
			Rec.Color = SafeOnColor
		end

		Health.Changed:Connect(function()
			if Health.Value <= 0 then 
				Rec.Color = SafeOffColor
			else
				Rec.Color = SafeOnColor
			end
		end)
	end
end

MakeSafeDots()

game:GetService("RunService"):BindToRenderStep("Hova upid", 1, function()
	for i,v in pairs(ScrapHolder) do
		if not v[1] then v[2]:Remove() continue end
		local vector, OnScreen = Camera:WorldToScreenPoint(v[1].PrimaryPart.Position)

		v[2].Visible = OnScreen

		local Size = 10
		local Position = Vector2.new(vector.X - Size/2, vector.Y - Size/2)
		v[2].Position = Position
		v[2].Color = v[1].PrimaryPart:FindFirstChild("Particle").Color.Keypoints[1].Value
	end

	for i,v in pairs(SafeHolder) do
		local vector, OnScreen = Camera:WorldToScreenPoint(v[1].PrimaryPart.Position)        
		local Size = 3
		local Position = Vector2.new(vector.X - Size/2, vector.Y - Size/2)

		v[2].Position = Position
		v[2].Visible = OnScreen

		local Health = v[1].Values.Health

		if Health.Value <= 0 then 
			v[2].Color = SafeOffColor
		else
			v[2].Color = SafeOnColor
		end
	end
end)

UIS.InputBegan:Connect(function(Input, typing)
	if typing then return end

	if Input.KeyCode == Enum.KeyCode.T then
		--Toggle = not Toggle
		--On()
	elseif Input.KeyCode == Enum.KeyCode.Y then
		--TriggerBot = not TriggerBot
		CanPickUp = not CanPickUp
	end
end)

while wait() do
	if TriggerBot then
		local Target = Mouse.Target
		
		if Target:FindFirstAncestorOfClass("Model") then
			local Model = Target:FindFirstAncestorOfClass("Model")
			
			if Model:FindFirstChild("HumanoidRootPart") and Model.Name ~= Player.Name then
				if os.time() - TriggerDebounce >= .15 then
					Input.LeftClick()
					TriggerDebounce = os.time()
				end
			elseif Model.Name == Player.Name then
				Mouse.TargetFilter = Model
			end
		end
	end

	if CanPickUp then
		wait(.5)
		for i,v in pairs(ScarpSpawn:GetChildren()) do
			if v and v.PrimaryPart then
				local Prim = v.PrimaryPart

				if (Player.Character["Left Leg"].Position - Prim.Position).Magnitude <= 4 then
					PickUpRemote:FireServer(Prim)
				end
			end
		end
	end
end